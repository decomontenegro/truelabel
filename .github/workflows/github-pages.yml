name: Deploy True Label Frontend to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
        
    - name: Install dependencies
      run: |
        cd client
        npm ci
        
    - name: Configure environment for GitHub Pages
      run: |
        cd client
        # Create production environment file for GitHub Pages
        cat > .env.production << EOF
        VITE_API_BASE_URL=https://truelabel2.vercel.app/api
        VITE_QR_BASE_URL=https://decomontenegro.github.io/truelabel
        VITE_ENVIRONMENT=production
        VITE_NODE_ENV=production
        VITE_RAILWAY_API_URL=https://truelabel-production.up.railway.app
        EOF
        
        echo "Environment configured for GitHub Pages:"
        cat .env.production
        
    - name: Build application
      run: |
        cd client
        NODE_ENV=production npm run build
        
    - name: Verify build output
      run: |
        echo "Build output contents:"
        ls -la client/dist/
        echo "Index.html exists:"
        ls -la client/dist/index.html
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: client/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Test deployment
        run: |
          echo "Deployment URL: ${{ steps.deployment.outputs.page_url }}"
          # Wait a moment for deployment to be ready
          sleep 30
          # Test if the page is accessible
          curl -f "${{ steps.deployment.outputs.page_url }}" || echo "Page not yet accessible"

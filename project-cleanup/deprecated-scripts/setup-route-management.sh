#!/bin/bash

# üè∑Ô∏è True Label API Route Management System Setup
# Configura o sistema completo de gerenciamento de rotas

echo "üè∑Ô∏è  True Label API Route Management Setup"
echo "========================================"

# Cores
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
error() { echo -e "${RED}‚ùå $1${NC}"; }
warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }

echo ""
info "1. Verificando depend√™ncias..."

# Verificar Node.js
if ! command -v node &> /dev/null; then
    error "Node.js n√£o encontrado!"
    echo "Instale Node.js em: https://nodejs.org"
    exit 1
fi

success "Node.js $(node --version) encontrado"

# Verificar npm
if ! command -v npm &> /dev/null; then
    error "npm n√£o encontrado!"
    exit 1
fi

success "npm $(npm --version) encontrado"

echo ""
info "2. Configurando permiss√µes..."

# Tornar scripts execut√°veis
chmod +x api-route-*.js
chmod +x api-route-manager.js
success "Scripts tornados execut√°veis"

echo ""
info "3. Verificando depend√™ncias do projeto..."

# Verificar se axios est√° instalado
if [ -f "package.json" ]; then
    if ! npm list axios &> /dev/null; then
        info "Instalando axios..."
        npm install axios
        success "Axios instalado"
    else
        success "Axios j√° instalado"
    fi
else
    warning "package.json n√£o encontrado - criando..."
    npm init -y
    npm install axios
    success "Projeto inicializado e axios instalado"
fi

echo ""
info "4. Verificando estrutura de diret√≥rios..."

# Criar diret√≥rios necess√°rios
mkdir -p server/src
mkdir -p client/src/services
success "Estrutura de diret√≥rios criada"

echo ""
info "5. Executando configura√ß√£o inicial..."

# Executar corre√ß√µes autom√°ticas
node api-route-manager.js fix
success "Configura√ß√£o inicial aplicada"

echo ""
info "6. Executando auditoria inicial..."

# Executar auditoria para estabelecer baseline
node api-route-manager.js audit
success "Auditoria inicial conclu√≠da"

echo ""
info "7. Gerando c√≥digo inicial..."

# Gerar c√≥digo a partir do registry
node api-route-manager.js generate
success "C√≥digo inicial gerado"

echo ""
info "8. Validando configura√ß√£o..."

# Validar configura√ß√£o
if node api-route-manager.js validate; then
    success "Valida√ß√£o conclu√≠da com sucesso"
else
    warning "Valida√ß√£o encontrou alguns problemas - verifique os relat√≥rios"
fi

echo ""
success "üéâ Setup do Sistema de Gerenciamento de Rotas conclu√≠do!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "   1. Revisar: api-route-registry.json"
echo "   2. Testar: node api-route-manager.js status"
echo "   3. Usar: node server/src/index-generated.js"
echo ""
echo "üìñ Documenta√ß√£o: API_ROUTE_MANAGEMENT_SYSTEM.md"
echo ""
echo "üîß Comandos √∫teis:"
echo "   node api-route-manager.js status    # Ver status atual"
echo "   node api-route-manager.js sync      # Sincronizar tudo"
echo "   node api-route-manager.js help      # Ver ajuda"
echo ""

# Mostrar status final
echo "üìä Status Final:"
node api-route-manager.js status

echo ""
success "‚úÖ Sistema pronto para uso!"

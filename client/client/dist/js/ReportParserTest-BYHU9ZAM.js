import{r as e,j as t,aT as a,F as s,C as i}from"./react-core-XCdXHkeW.js";import"./vendor-BcMaAnXF.js";import"./state-QrSTFgAv.js";import"./react-dom-BslC4xag.js";const r={EUROFINS:{reportNumber:/Report\s*(?:Number|No\.?|#)\s*:?\s*([\w-]+)/i,date:/(?:Report\s*)?Date\s*:?\s*(\d{1,2}[-/]\d{1,2}[-/]\d{2,4})/i,sampleId:/Sample\s*(?:ID|Number|Code)\s*:?\s*([\w-]+)/i},SGS:{reportNumber:/SGS\s*Report\s*(?:No\.?|Number)\s*:?\s*([\w-]+)/i,date:/Issue\s*Date\s*:?\s*(\d{1,2}[-/]\d{1,2}[-/]\d{2,4})/i,sampleId:/Sample\s*Reference\s*:?\s*([\w-]+)/i},INTERTEK:{reportNumber:/Certificate\s*(?:No\.?|Number)\s*:?\s*([\w-]+)/i,date:/Test\s*Date\s*:?\s*(\d{1,2}[-/]\d{1,2}[-/]\d{2,4})/i,sampleId:/Lab\s*(?:Sample\s*)?(?:No\.?|Number)\s*:?\s*([\w-]+)/i}},n={"mg/kg":"ppm","\u03bcg/kg":"ppb","ug/kg":"ppb","mg/L":"ppm","\u03bcg/L":"ppb","ug/L":"ppb","UFC/g":"CFU/g","NMP/g":"MPN/g","Col/g":"CFU/g"},o={"contagem total":"totalPlateCount","contagem padr\xe3o em placas":"totalPlateCount","aerobic plate count":"totalPlateCount","coliformes totais":"coliforms","total coliforms":"coliforms","escherichia coli":"ecoli","e. coli":"ecoli",salmonela:"salmonella","listeria monocytogenes":"listeria","staphylococcus aureus":"staphylococcus","bolores e leveduras":"yeastAndMold","yeast and mold":"yeastAndMold","bacillus cereus":"bacillus","clostridium perfringens":"clostridium","enterobact\xe9rias":"enterobacteriaceae",chumbo:"lead",lead:"lead",pb:"lead","c\xe1dmio":"cadmium",cadmium:"cadmium",cd:"cadmium","merc\xfario":"mercury",mercury:"mercury",hg:"mercury","ars\xeanio":"arsenic",arsenic:"arsenic",as:"arsenic",cromo:"chromium",chromium:"chromium",cr:"chromium",cobre:"copper",copper:"copper",cu:"copper",zinco:"zinc",zinc:"zinc",zn:"zinc","n\xedquel":"nickel",nickel:"nickel",ni:"nickel","alum\xednio":"aluminum",aluminum:"aluminum",al:"aluminum",estanho:"tin",tin:"tin",sn:"tin",umidade:"moisture",moisture:"moisture",cinzas:"ash",ash:"ash","prote\xedna":"protein",protein:"protein",gordura:"totalFat","lip\xeddios":"totalFat",fat:"totalFat",carboidratos:"totalCarbohydrates",carbohydrates:"totalCarbohydrates","fibra alimentar":"dietaryFiber","dietary fiber":"dietaryFiber","a\xe7\xfacares totais":"totalSugars","total sugars":"totalSugars","s\xf3dio":"sodium",sodium:"sodium",na:"sodium",calorias:"calories",energia:"calories",energy:"calories","valor energ\xe9tico":"calories"},l=[/<\s*([\d.]+)/,/ND\s*\(([\d.]+)\)/,/LOD\s*:\s*([\d.]+)/,/LQ\s*:\s*([\d.]+)/,/n\xe3o detectado/i,/not detected/i,/ausente/i,/absent/i,/negativo/i,/negative/i],c=new class{async parseReport(e){try{const t=await this.extractTextFromFile(e),a=this.detectLabFormat(t),s={laboratoryFormat:a,confidence:0,dataPoints:[],extractionErrors:[]};this.extractBasicInfo(t,a,s),s.microbiological=this.extractMicrobiological(t),s.heavyMetals=this.extractHeavyMetals(t),s.nutritional=this.extractNutritional(t),s.pesticides=this.extractPesticides(t),s.allergens=this.extractAllergens(t),s.physicalChemical=this.extractPhysicalChemical(t),s.dataPoints=this.convertToDataPoints(s),s.confidence=this.calculateConfidence(s);const i=this.validateExtractedData(s);return i.isValid||(s.extractionErrors=i.errors),s.rawData=t,s}catch(t){throw new Error(`Failed to parse report: ${t instanceof Error?t.message:"Unknown error"}`)}}async extractTextFromFile(e){if("text/plain"===e.type)return await e.text();if("application/pdf"===e.type)return await this.extractTextFromPDF(e);if(e.type.startsWith("image/"))return await this.performOCR(e);throw new Error(`Unsupported file type: ${e.type}`)}async extractTextFromPDF(e){return"Sample PDF content..."}async performOCR(e){return"Sample OCR content..."}detectLabFormat(e){const t=e.toLowerCase();return t.includes("eurofins")||t.includes("eurofins scientific")?"EUROFINS":t.includes("sgs")||t.includes("soci\xe9t\xe9 g\xe9n\xe9rale de surveillance")?"SGS":t.includes("intertek")?"INTERTEK":t.includes("bureau veritas")||t.includes("bv")?"BUREAU_VERITAS":t.includes("als")||t.includes("australian laboratory services")?"ALS":"UNKNOWN"}extractBasicInfo(e,t,a){const s=r[t]||r.EUROFINS,i=e.match(s.reportNumber);i&&(a.reportNumber=i[1]);const n=e.match(s.date);n&&(a.reportDate=this.normalizeDate(n[1]));const o=e.match(s.sampleId);o&&(a.sampleId=o[1]);const l=e.match(/(?:Product|Produto|Sample\s*Name|Nome\s*da\s*Amostra)\s*:?\s*([^\n\r]+)/i);l&&(a.productName=l[1].trim());const c=e.match(/(?:Batch|Lote|Lot)\s*(?:Number|No\.?|#)?\s*:?\s*([\w-]+)/i);c&&(a.batchNumber=c[1])}extractMicrobiological(e){const t={},a=e.split("\n");for(const s of a){const e=s.toLowerCase();for(const[a,i]of Object.entries(o))if(e.includes(a)&&this.isMicrobiologicalField(i)){const e=this.extractTestResult(s);e&&(t[i]=e)}}return t}extractHeavyMetals(e){const t={},a=e.split("\n");for(const s of a){const e=s.toLowerCase();for(const[a,i]of Object.entries(o))if(e.includes(a)&&this.isHeavyMetalField(i)){const e=this.extractTestResult(s);e&&(t[i]=e)}}return t}extractNutritional(e){const t={},a=e.split("\n");for(const r of a){const e=r.toLowerCase();for(const[a,s]of Object.entries(o))if(e.includes(a)&&this.isNutritionalField(s)){const e=this.extractNumericalValue(r);null!==e&&(t[s]=e.value)}}const s=this.extractVitaminsAndMinerals(e,"vitamin"),i=this.extractVitaminsAndMinerals(e,"mineral");return s.length>0&&(t.vitamins=s),i.length>0&&(t.minerals=i),t}extractPesticides(e){const t={},a=this.extractSection(e,["pesticides","pesticidas","agrot\xf3xicos"]);if(!a)return t;const s=[...a.matchAll(/([a-zA-Z\s-]+)\s*([\d.]+)\s*(mg\/kg|\u03bcg\/kg|ppm|ppb)/gi)].map((e=>({value:parseFloat(e[2]),unit:this.normalizeUnit(e[3]),status:this.determinePesticideStatus(parseFloat(e[2]),e[3])})));return s.length>0&&(t.totalPesticides={value:s.length,unit:"compounds detected",status:s.some((e=>"FAIL"===e.status))?"FAIL":"PASS"}),t}extractAllergens(e){const t={contains:[],mayContain:[],freeFrom:[]},a=this.extractSection(e,["allergen","al\xe9rgeno","alerg\xeanico"]);if(!a)return t;const s=["milk","leite","egg","ovo","soy","soja","wheat","trigo","peanut","amendoim","tree nut","castanha","fish","peixe","shellfish","crust\xe1ceo","sesame","gergelim","gluten","gl\xfaten"];for(const i of s)new RegExp(`${i}[^\\n]*(?:present|presente|detected|detectado)`,"i").test(a)&&t.contains.push(i),new RegExp(`may contain[^\\n]*${i}|pode conter[^\\n]*${i}`,"i").test(a)&&t.mayContain.push(i),new RegExp(`free from[^\\n]*${i}|livre de[^\\n]*${i}`,"i").test(a)&&t.freeFrom.push(i);return t}extractPhysicalChemical(e){const t={},a=this.extractSection(e,["physical","chemical","f\xedsico","qu\xedmico"]);if(!a)return t;const s={ph:/pH\s*:?\s*([\d.]+)/i,acidity:/(?:acidity|acidez)\s*:?\s*([\d.]+)\s*(%|g\/100g)/i,brix:/(?:brix|\xb0brix)\s*:?\s*([\d.]+)/i,density:/(?:density|densidade)\s*:?\s*([\d.]+)\s*(g\/ml|kg\/m3)/i,viscosity:/(?:viscosity|viscosidade)\s*:?\s*([\d.]+)\s*(cP|mPa\.s)/i,color:/(?:color|cor)\s*:?\s*([^\n]+)/i,turbidity:/(?:turbidity|turbidez)\s*:?\s*([\d.]+)\s*(NTU|FTU)/i};for(const[i,r]of Object.entries(s)){const e=a.match(r);e&&(t[i]={value:"color"===i?e[1].trim():parseFloat(e[1]),unit:e[2]||void 0})}return t}extractTestResult(e){const t=this.extractNumericalValue(e);if(t)return{value:t.value,unit:t.unit,status:this.determineStatus(t.value,t.unit)};for(const a of l){const t=e.match(a);if(t)return{value:t[1]||"ND",detectionLimit:t[1],status:"PASS"}}return/ausente|absent|negativo|negative/i.test(e)?{value:"Absent",status:"PASS"}:/presente|present|positivo|positive/i.test(e)?{value:"Present",status:"FAIL"}:null}extractNumericalValue(e){const t=[/([\d.]+)\s*(mg\/kg|\u03bcg\/kg|ug\/kg|g\/100g|g\/L|mg\/L|\u03bcg\/L|ug\/L|ppm|ppb|%|IU|CFU\/g|UFC\/g|NMP\/g|MPN\/g)/i,/([\d.]+)\s*x\s*10\^([\d]+)\s*(CFU\/g|UFC\/g|NMP\/g|MPN\/g)/i,/([\d,]+)\s*(kcal|cal|kJ)/i];for(const a of t){const t=e.match(a);if(t)return t[3]&&t[2]?{value:parseFloat(t[1])*Math.pow(10,parseInt(t[2])),unit:t[3]}:{value:parseFloat(t[1].replace(",",".")),unit:this.normalizeUnit(t[2])}}return null}extractVitaminsAndMinerals(e,t){const a=[],s=this.extractSection(e,[t,"vitamin"===t?"vitamina":"mineral"]);if(!s)return a;const i="vitamin"===t?["vitamin a","vitamin b1","vitamin b2","vitamin b3","vitamin b6","vitamin b12","vitamin c","vitamin d","vitamin e","vitamin k"]:["calcium","iron","magnesium","phosphorus","potassium","sodium","zinc","copper","manganese","selenium"];for(const r of i){const e=new RegExp(`${r}[^\\n]*([d.]+)\\s*(mg|mcg|\u03bcg|ug|IU)`,"i"),t=s.match(e);t&&a.push({name:r,amount:parseFloat(t[1]),unit:this.normalizeUnit(t[2])})}return a}extractSection(e,t){const a=e.split("\n");let s=!1,i="";for(const r of a){const e=r.toLowerCase();if(t.some((t=>e.includes(t))))s=!0;else if(s&&/^[A-Z][A-Z\s]+:?$/.test(r.trim()))break;s&&(i+=r+"\n")}return i||null}convertToDataPoints(e){const t=[];if(e.microbiological)for(const[a,s]of Object.entries(e.microbiological))s&&"object"==typeof s&&"value"in s&&t.push({dataPointId:`micro_${a}`,name:this.formatFieldName(a),value:s.value,unit:s.unit,validationStatus:"PASS"===s.status?"PASSED":"FAIL"===s.status?"FAILED":"WARNING",source:"LAB_REPORT"});if(e.heavyMetals)for(const[a,s]of Object.entries(e.heavyMetals))s&&"object"==typeof s&&"value"in s&&t.push({dataPointId:`metal_${a}`,name:this.formatFieldName(a),value:s.value,unit:s.unit,validationStatus:"PASS"===s.status?"PASSED":"FAIL"===s.status?"FAILED":"WARNING",source:"LAB_REPORT",threshold:this.getHeavyMetalThreshold(a)});if(e.nutritional)for(const[a,s]of Object.entries(e.nutritional))"number"==typeof s&&t.push({dataPointId:`nutri_${a}`,name:this.formatFieldName(a),value:s,unit:this.getNutritionalUnit(a),validationStatus:"NOT_APPLICABLE",source:"LAB_REPORT"});return t}calculateConfidence(e){let t=0;"UNKNOWN"!==e.laboratoryFormat&&(t+=20);const a=["reportNumber","reportDate","sampleId"];return t+=a.filter((t=>e[t])).length/a.length*20,(e.microbiological&&Object.keys(e.microbiological).length>0||e.heavyMetals&&Object.keys(e.heavyMetals).length>0||e.nutritional&&Object.keys(e.nutritional).length>0)&&(t+=30),t+=30*Math.min(e.dataPoints.length/10,1),Math.round(t)}validateExtractedData(e){const t=[];if(0===e.dataPoints.length&&t.push("No data points were extracted from the report"),e.reportDate){const a=new Date(e.reportDate);isNaN(a.getTime())&&t.push("Invalid report date format")}e.microbiological&&Object.keys(e.microbiological).length>0&&(["totalPlateCount","coliforms"].some((t=>e.microbiological[t]))||t.push("Microbiological report missing basic parameters"));for(const a of e.dataPoints)"number"==typeof a.value&&(isNaN(a.value)||a.value<0)&&t.push(`Invalid value for ${a.name}: ${a.value}`);return{isValid:0===t.length,errors:t}}normalizeUnit(e){return n[e]||e}normalizeDate(e){const t=e.split(/[-/]/);if(3===t.length){const[e,a,s]=t.map((e=>e.padStart(2,"0")));return`${2===s.length?`20${s}`:s}-${a}-${e}`}return e}formatFieldName(e){return e.replace(/([A-Z])/g," $1").replace(/^./,(e=>e.toUpperCase())).trim()}isMicrobiologicalField(e){return["totalPlateCount","coliforms","ecoli","salmonella","listeria","staphylococcus","yeastAndMold","bacillus","clostridium","enterobacteriaceae"].includes(e)}isHeavyMetalField(e){return["lead","cadmium","mercury","arsenic","chromium","copper","zinc","nickel","aluminum","tin"].includes(e)}isNutritionalField(e){return["calories","totalFat","saturatedFat","protein","totalCarbohydrates","dietaryFiber","totalSugars","sodium","moisture","ash","pH"].includes(e)}getNutritionalUnit(e){return{calories:"kcal",totalFat:"g",saturatedFat:"g",protein:"g",totalCarbohydrates:"g",dietaryFiber:"g",totalSugars:"g",sodium:"mg",moisture:"%",ash:"%",pH:""}[e]||""}getHeavyMetalThreshold(e){return{lead:{max:.5,unit:"mg/kg"},cadmium:{max:.1,unit:"mg/kg"},mercury:{max:.05,unit:"mg/kg"},arsenic:{max:1,unit:"mg/kg"}}[e]||{}}determineStatus(e,t){return"string"==typeof e?e.toLowerCase().includes("absent")||e.toLowerCase().includes("nd")?"PASS":"WARNING":"CFU/g"===t&&e>1e4?"FAIL":"mg/kg"===t&&e>1?"WARNING":"PASS"}determinePesticideStatus(e,t){let a=e;return"\u03bcg/kg"!==t&&"ppb"!==t||(a=e/1e3),a>.01?"FAIL":a>.005?"WARNING":"PASS"}};function d(){const[r,n]=e.useState(null),[o,l]=e.useState(null),[d,m]=e.useState(!1),[u,p]=e.useState(null),h=e=>e&&"object"==typeof e?t.jsxs("div",{className:"flex items-center justify-between",children:[t.jsxs("div",{children:[t.jsx("span",{className:"font-medium",children:e.value}),e.unit&&t.jsx("span",{className:"text-gray-500 ml-1",children:e.unit}),e.detectionLimit&&t.jsxs("span",{className:"text-xs text-gray-400 ml-2",children:["(LOD: ",e.detectionLimit,")"]})]}),e.status&&t.jsx("span",{className:"px-2 py-1 text-xs rounded-full "+("PASS"===e.status?"bg-green-100 text-green-800":"FAIL"===e.status?"bg-red-100 text-red-800":"bg-yellow-100 text-yellow-800"),children:e.status})]}):null;return t.jsxs("div",{className:"max-w-6xl mx-auto px-4 py-8",children:[t.jsx("h1",{className:"text-3xl font-bold mb-8",children:"Report Parser Test"}),t.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6 mb-8",children:[t.jsx("h2",{className:"text-xl font-semibold mb-4",children:"Upload Laboratory Report"}),t.jsxs("div",{className:"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center",children:[t.jsx(a,{className:"w-12 h-12 text-gray-400 mx-auto mb-4"}),t.jsx("p",{className:"text-gray-600 mb-2",children:"Drop your laboratory report here or click to browse"}),t.jsx("p",{className:"text-sm text-gray-500 mb-4",children:"Supports PDF, images (JPG, PNG), and text files"}),t.jsx("input",{type:"file",accept:".pdf,.txt,.jpg,.jpeg,.png",onChange:e=>{var t;const a=null==(t=e.target.files)?void 0:t[0];a&&(n(a),p(null),l(null))},className:"hidden",id:"file-upload"}),t.jsx("label",{htmlFor:"file-upload",className:"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg cursor-pointer hover:bg-blue-700",children:"Select File"})]}),r&&t.jsxs("div",{className:"mt-4 flex items-center justify-between p-4 bg-gray-50 rounded-lg",children:[t.jsxs("div",{className:"flex items-center",children:[t.jsx(s,{className:"w-5 h-5 text-gray-500 mr-2"}),t.jsx("span",{className:"text-gray-700",children:r.name}),t.jsxs("span",{className:"text-sm text-gray-500 ml-2",children:["(",(r.size/1024).toFixed(2)," KB)"]})]}),t.jsx("button",{onClick:async()=>{if(r){m(!0),p(null);try{const e=await c.parseReport(r);l(e)}catch(e){p(e instanceof Error?e.message:"Failed to parse report")}finally{m(!1)}}},disabled:d,className:"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50",children:d?"Parsing...":"Parse Report"})]})]}),u&&t.jsxs("div",{className:"bg-red-50 border border-red-200 rounded-lg p-4 mb-8 flex items-start",children:[t.jsx(i,{className:"w-5 h-5 text-red-500 mr-2 flex-shrink-0 mt-0.5"}),t.jsxs("div",{children:[t.jsx("h3",{className:"font-semibold text-red-800",children:"Parsing Error"}),t.jsx("p",{className:"text-red-700",children:u})]})]}),o&&t.jsxs("div",{className:"space-y-6",children:[t.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[t.jsx("h2",{className:"text-xl font-semibold mb-4",children:"Report Information"}),t.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[t.jsxs("div",{children:[t.jsx("span",{className:"text-gray-600",children:"Laboratory Format:"}),t.jsx("span",{className:"ml-2 font-medium",children:o.laboratoryFormat})]}),t.jsxs("div",{children:[t.jsx("span",{className:"text-gray-600",children:"Confidence Score:"}),t.jsxs("span",{className:"ml-2 font-medium",children:[o.confidence,"%"]})]}),o.reportNumber&&t.jsxs("div",{children:[t.jsx("span",{className:"text-gray-600",children:"Report Number:"}),t.jsx("span",{className:"ml-2 font-medium",children:o.reportNumber})]}),o.reportDate&&t.jsxs("div",{children:[t.jsx("span",{className:"text-gray-600",children:"Report Date:"}),t.jsx("span",{className:"ml-2 font-medium",children:o.reportDate})]}),o.sampleId&&t.jsxs("div",{children:[t.jsx("span",{className:"text-gray-600",children:"Sample ID:"}),t.jsx("span",{className:"ml-2 font-medium",children:o.sampleId})]}),o.productName&&t.jsxs("div",{children:[t.jsx("span",{className:"text-gray-600",children:"Product Name:"}),t.jsx("span",{className:"ml-2 font-medium",children:o.productName})]})]})]}),o.microbiological&&Object.keys(o.microbiological).length>0&&t.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[t.jsx("h2",{className:"text-xl font-semibold mb-4",children:"Microbiological Analysis"}),t.jsx("div",{className:"space-y-3",children:Object.entries(o.microbiological).map((([e,a])=>t.jsxs("div",{className:"border-b pb-2",children:[t.jsx("div",{className:"text-gray-700 mb-1",children:e.replace(/([A-Z])/g," $1").replace(/^./,(e=>e.toUpperCase()))}),h(a)]},e)))})]}),o.heavyMetals&&Object.keys(o.heavyMetals).length>0&&t.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[t.jsx("h2",{className:"text-xl font-semibold mb-4",children:"Heavy Metals Analysis"}),t.jsx("div",{className:"space-y-3",children:Object.entries(o.heavyMetals).map((([e,a])=>t.jsxs("div",{className:"border-b pb-2",children:[t.jsx("div",{className:"text-gray-700 mb-1",children:e.charAt(0).toUpperCase()+e.slice(1)}),h(a)]},e)))})]}),o.nutritional&&Object.keys(o.nutritional).length>0&&t.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[t.jsx("h2",{className:"text-xl font-semibold mb-4",children:"Nutritional Analysis"}),t.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:Object.entries(o.nutritional).map((([e,a])=>t.jsxs("div",{className:"flex justify-between",children:[t.jsxs("span",{className:"text-gray-700",children:[e.replace(/([A-Z])/g," $1").replace(/^./,(e=>e.toUpperCase())),":"]}),t.jsx("span",{className:"font-medium",children:"number"==typeof a?a:JSON.stringify(a)})]},e)))})]}),t.jsxs("div",{className:"bg-white rounded-lg shadow-md p-6",children:[t.jsxs("h2",{className:"text-xl font-semibold mb-4",children:["Extracted Data Points (",o.dataPoints.length,")"]}),t.jsxs("div",{className:"overflow-x-auto",children:[t.jsxs("table",{className:"min-w-full",children:[t.jsx("thead",{children:t.jsxs("tr",{className:"border-b",children:[t.jsx("th",{className:"text-left py-2",children:"Parameter"}),t.jsx("th",{className:"text-left py-2",children:"Value"}),t.jsx("th",{className:"text-left py-2",children:"Unit"}),t.jsx("th",{className:"text-left py-2",children:"Status"}),t.jsx("th",{className:"text-left py-2",children:"Source"})]})}),t.jsx("tbody",{children:o.dataPoints.slice(0,20).map((e=>t.jsxs("tr",{className:"border-b",children:[t.jsx("td",{className:"py-2",children:e.name}),t.jsx("td",{className:"py-2",children:e.value}),t.jsx("td",{className:"py-2",children:e.unit||"-"}),t.jsx("td",{className:"py-2",children:t.jsx("span",{className:"px-2 py-1 text-xs rounded-full "+("PASSED"===e.validationStatus?"bg-green-100 text-green-800":"FAILED"===e.validationStatus?"bg-red-100 text-red-800":"WARNING"===e.validationStatus?"bg-yellow-100 text-yellow-800":"bg-gray-100 text-gray-800"),children:e.validationStatus})}),t.jsx("td",{className:"py-2",children:e.source})]},e.dataPointId)))})]}),o.dataPoints.length>20&&t.jsxs("p",{className:"text-sm text-gray-500 mt-2",children:["Showing first 20 of ",o.dataPoints.length," data points"]})]})]}),o.extractionErrors&&o.extractionErrors.length>0&&t.jsxs("div",{className:"bg-yellow-50 border border-yellow-200 rounded-lg p-4",children:[t.jsx("h3",{className:"font-semibold text-yellow-800 mb-2",children:"Extraction Warnings"}),t.jsx("ul",{className:"list-disc list-inside text-yellow-700",children:o.extractionErrors.map(((e,a)=>t.jsx("li",{children:e},a)))})]})]})]})}export{d as default};

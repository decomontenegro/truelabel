var e=Object.defineProperty,a=(a,t,i)=>((a,t,i)=>t in a?e(a,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):a[t]=i)(a,"symbol"!=typeof t?t+"":t,i);import{U as t,a6 as i}from"./index-BwznawPq.js";import{f as r,a as s}from"./fallbackService-D-6NybDe.js";import{q as o}from"./qrService-6zzcFofI.js";const n={aerobic_mesophiles:{parameter:"Aerobic Mesophiles",unit:"CFU/g",limits:{max:1e5,warningThreshold:5e4},regulatorySource:"ANVISA RDC 331/2019",category:"microbiological",severity:"major"},total_coliforms:{parameter:"Total Coliforms",unit:"CFU/g",limits:{max:1e3,warningThreshold:500},regulatorySource:"ANVISA RDC 331/2019",category:"microbiological",severity:"major"},thermotolerant_coliforms:{parameter:"Thermotolerant Coliforms (45°C)",unit:"CFU/g",limits:{max:100,warningThreshold:50},regulatorySource:"ANVISA RDC 331/2019",category:"microbiological",severity:"critical"},escherichia_coli:{parameter:"Escherichia coli",unit:"CFU/g",limits:{max:10,warningThreshold:5},regulatorySource:"ANVISA RDC 331/2019",category:"microbiological",severity:"critical"},salmonella:{parameter:"Salmonella sp.",unit:"in 25g",limits:{max:0},regulatorySource:"ANVISA RDC 331/2019",category:"microbiological",severity:"critical"},listeria_monocytogenes:{parameter:"Listeria monocytogenes",unit:"CFU/g",limits:{max:100,warningThreshold:50},regulatorySource:"ANVISA RDC 331/2019",category:"microbiological",severity:"critical"},staphylococcus_aureus:{parameter:"Staphylococcus aureus",unit:"CFU/g",limits:{max:1e3,warningThreshold:500},regulatorySource:"ANVISA RDC 331/2019",category:"microbiological",severity:"major"},bacillus_cereus:{parameter:"Bacillus cereus",unit:"CFU/g",limits:{max:1e3,warningThreshold:500},regulatorySource:"ANVISA RDC 331/2019",category:"microbiological",severity:"major"},clostridium_perfringens:{parameter:"Clostridium perfringens",unit:"CFU/g",limits:{max:100,warningThreshold:50},regulatorySource:"ANVISA RDC 331/2019",category:"microbiological",severity:"major"},yeasts_molds:{parameter:"Yeasts and Molds",unit:"CFU/g",limits:{max:1e4,warningThreshold:5e3},regulatorySource:"ANVISA RDC 331/2019",category:"microbiological",severity:"minor"}},l={lead:{parameter:"Lead (Pb)",unit:"mg/kg",limits:{max:.5,warningThreshold:.4},regulatorySource:"ANVISA RDC 722/2022",category:"chemical",severity:"critical"},cadmium:{parameter:"Cadmium (Cd)",unit:"mg/kg",limits:{max:.1,warningThreshold:.08},regulatorySource:"ANVISA RDC 722/2022",category:"chemical",severity:"critical"},mercury:{parameter:"Mercury (Hg)",unit:"mg/kg",limits:{max:.05,warningThreshold:.04},regulatorySource:"ANVISA RDC 722/2022",category:"chemical",severity:"critical"},arsenic:{parameter:"Arsenic (As)",unit:"mg/kg",limits:{max:.3,warningThreshold:.25},regulatorySource:"ANVISA RDC 722/2022",category:"chemical",severity:"critical"},tin:{parameter:"Tin (Sn)",unit:"mg/kg",limits:{max:250,warningThreshold:200},regulatorySource:"ANVISA RDC 722/2022",category:"chemical",severity:"major"},copper:{parameter:"Copper (Cu)",unit:"mg/kg",limits:{max:30,warningThreshold:25},regulatorySource:"ANVISA RDC 722/2022",category:"chemical",severity:"minor"},chromium:{parameter:"Chromium (Cr)",unit:"mg/kg",limits:{max:.1,warningThreshold:.08},regulatorySource:"ANVISA RDC 722/2022",category:"chemical",severity:"major"}},c={glyphosate:{parameter:"Glyphosate",unit:"mg/kg",limits:{max:.1,warningThreshold:.08},regulatorySource:"ANVISA Monograph",category:"chemical",severity:"critical"},chlorpyrifos:{parameter:"Chlorpyrifos",unit:"mg/kg",limits:{max:.05,warningThreshold:.04},regulatorySource:"ANVISA Monograph",category:"chemical",severity:"critical"},carbendazim:{parameter:"Carbendazim",unit:"mg/kg",limits:{max:.1,warningThreshold:.08},regulatorySource:"ANVISA Monograph",category:"chemical",severity:"major"},imidacloprid:{parameter:"Imidacloprid",unit:"mg/kg",limits:{max:.05,warningThreshold:.04},regulatorySource:"ANVISA Monograph",category:"chemical",severity:"major"},deltamethrin:{parameter:"Deltamethrin",unit:"mg/kg",limits:{max:.02,warningThreshold:.015},regulatorySource:"ANVISA Monograph",category:"chemical",severity:"major"}},u={aflatoxin_b1:{parameter:"Aflatoxin B1",unit:"μg/kg",limits:{max:5,warningThreshold:4},regulatorySource:"ANVISA RDC 723/2022",category:"chemical",severity:"critical"},aflatoxin_total:{parameter:"Total Aflatoxins (B1+B2+G1+G2)",unit:"μg/kg",limits:{max:20,warningThreshold:15},regulatorySource:"ANVISA RDC 723/2022",category:"chemical",severity:"critical"},aflatoxin_m1:{parameter:"Aflatoxin M1",unit:"μg/L",limits:{max:.5,warningThreshold:.4},regulatorySource:"ANVISA RDC 723/2022",category:"chemical",severity:"critical"},ochratoxin_a:{parameter:"Ochratoxin A",unit:"μg/kg",limits:{max:10,warningThreshold:8},regulatorySource:"ANVISA RDC 723/2022",category:"chemical",severity:"major"},deoxynivalenol:{parameter:"Deoxynivalenol (DON)",unit:"μg/kg",limits:{max:1e3,warningThreshold:800},regulatorySource:"ANVISA RDC 723/2022",category:"chemical",severity:"major"},zearalenone:{parameter:"Zearalenone",unit:"μg/kg",limits:{max:200,warningThreshold:150},regulatorySource:"ANVISA RDC 723/2022",category:"chemical",severity:"major"},fumonisin:{parameter:"Fumonisins (B1+B2)",unit:"μg/kg",limits:{max:1500,warningThreshold:1200},regulatorySource:"ANVISA RDC 723/2022",category:"chemical",severity:"major"},patulin:{parameter:"Patulin",unit:"μg/L",limits:{max:50,warningThreshold:40},regulatorySource:"ANVISA RDC 723/2022",category:"chemical",severity:"major"}},d={macronutrients:{tolerance:.2,parameters:["protein","total_fat","carbohydrates","dietary_fiber","sugar"]},micronutrients:{highValue:{tolerance:.2},lowValue:{tolerance:.45}},energy:{tolerance:.2,parameters:["calories","energy_kj"]},sodium:{upperTolerance:.2}};function m(e,a,t,i){let r;switch(i){case"heavy_metal":r=l[e.toLowerCase().replace(/\s+/g,"_")];break;case"pesticide":r=c[e.toLowerCase().replace(/\s+/g,"_")];break;case"mycotoxin":r=u[e.toLowerCase().replace(/\s+/g,"_")]}return r?a>r.limits.max?{parameter:e,value:a,unit:t,status:"rejected",message:`Exceeds maximum limit of ${r.limits.max} ${r.unit}`,regulatoryReference:r.regulatorySource}:r.limits.warningThreshold&&a>r.limits.warningThreshold?{parameter:e,value:a,unit:t,status:"warning",message:`Above warning threshold of ${r.limits.warningThreshold} ${r.unit}`,regulatoryReference:r.regulatorySource}:{parameter:e,value:a,unit:t,status:"approved",message:"Within acceptable limits",regulatoryReference:r.regulatorySource}:{parameter:e,value:a,unit:t,status:"warning",message:"No regulatory limit defined for this parameter"}}function g(e){const a=[];e.microbiological&&e.microbiological.forEach((e=>{a.push(function(e,a,t){const i=n[e.toLowerCase().replace(/\s+/g,"_")];return i?e.toLowerCase().includes("salmonella")?{parameter:e,value:a,unit:t,status:0===a?"approved":"rejected",message:0===a?"Absent (compliant)":"Present (non-compliant)",regulatoryReference:i.regulatorySource}:a>i.limits.max?{parameter:e,value:a,unit:t,status:"rejected",message:`Exceeds maximum limit of ${i.limits.max} ${i.unit}`,regulatoryReference:i.regulatorySource}:i.limits.warningThreshold&&a>i.limits.warningThreshold?{parameter:e,value:a,unit:t,status:"warning",message:`Above warning threshold of ${i.limits.warningThreshold} ${i.unit}`,regulatoryReference:i.regulatorySource}:{parameter:e,value:a,unit:t,status:"approved",message:"Within acceptable limits",regulatoryReference:i.regulatorySource}:{parameter:e,value:a,unit:t,status:"warning",message:"No regulatory limit defined for this parameter"}}(e.parameter,e.value,e.unit))})),e.heavyMetals&&e.heavyMetals.forEach((e=>{a.push(m(e.parameter,e.value,e.unit,"heavy_metal"))})),e.pesticides&&e.pesticides.forEach((e=>{a.push(m(e.parameter,e.value,e.unit,"pesticide"))})),e.mycotoxins&&e.mycotoxins.forEach((e=>{a.push(m(e.parameter,e.value,e.unit,"mycotoxin"))})),e.nutritional&&e.nutritional.forEach((e=>{a.push(function(e,a,t,i){const r=e.toLowerCase();let s,o,n;d.macronutrients.parameters.includes(r)?(s=d.macronutrients.tolerance,o=a*(1-s),n=a*(1+s)):d.energy.parameters.includes(r)?(s=d.energy.tolerance,o=a*(1-s),n=a*(1+s)):"sodium"===r?(o=0,n=a*(1+d.sodium.upperTolerance)):(s=a>=(i.toLowerCase().includes("mg")?100:.1)?d.micronutrients.highValue.tolerance:d.micronutrients.lowValue.tolerance,o=a*(1-s),n=a*(1+s));return t<o?{parameter:e,value:t,unit:i,status:"rejected",message:`Below minimum tolerance (declared: ${a}, min allowed: ${o.toFixed(2)})`,regulatoryReference:"ANVISA RDC 429/2020"}:t>n?{parameter:e,value:t,unit:i,status:"rejected",message:`Above maximum tolerance (declared: ${a}, max allowed: ${n.toFixed(2)})`,regulatoryReference:"ANVISA RDC 429/2020"}:t<1.05*o||t>.95*n?{parameter:e,value:t,unit:i,status:"warning",message:`Near tolerance limits (declared: ${a}, actual: ${t})`,regulatoryReference:"ANVISA RDC 429/2020"}:{parameter:e,value:t,unit:i,status:"approved",message:`Within tolerance range (declared: ${a}, actual: ${t})`,regulatoryReference:"ANVISA RDC 429/2020"}}(e.parameter,e.declaredValue,e.actualValue,e.unit))}));const t=function(e){const a=e.filter((e=>"rejected"===e.status)),t=e.filter((e=>"warning"===e.status)),i=a.filter((e=>{const a={...n,...l,...c,...u},t=Object.values(a).find((a=>a.parameter===e.parameter));return"critical"===(null==t?void 0:t.severity)}));return i.length>0?{status:"rejected",summary:`Product rejected due to ${i.length} critical non-compliance(s)`,criticalIssues:a.length,warnings:t.length}:a.length>0?{status:"rejected",summary:`Product rejected due to ${a.length} non-compliance(s)`,criticalIssues:a.length,warnings:t.length}:t.length>0?{status:"conditional",summary:`Product conditionally approved with ${t.length} warning(s)`,criticalIssues:0,warnings:t.length}:{status:"approved",summary:"Product meets all regulatory requirements",criticalIssues:0,warnings:0}}(a),i=function(e){const a={microbiological:[],chemical:[],nutritional:[],recommendations:[]};return e.forEach((e=>{const t=`${e.parameter}: ${e.message}`;e.parameter.toLowerCase().includes("coliform")||e.parameter.toLowerCase().includes("salmonella")||e.parameter.toLowerCase().includes("listeria")||e.parameter.toLowerCase().includes("staphylococcus")||e.parameter.toLowerCase().includes("escherichia")||e.parameter.toLowerCase().includes("bacillus")||e.parameter.toLowerCase().includes("clostridium")||e.parameter.toLowerCase().includes("yeast")||e.parameter.toLowerCase().includes("mold")||e.parameter.toLowerCase().includes("mesophile")?a.microbiological.push(t):e.parameter.toLowerCase().includes("lead")||e.parameter.toLowerCase().includes("cadmium")||e.parameter.toLowerCase().includes("mercury")||e.parameter.toLowerCase().includes("arsenic")||e.parameter.toLowerCase().includes("aflatoxin")||e.parameter.toLowerCase().includes("ochratoxin")||e.parameter.toLowerCase().includes("mycotoxin")||e.parameter.toLowerCase().includes("pesticide")?a.chemical.push(t):a.nutritional.push(t),"rejected"!==e.status&&"warning"!==e.status||(e.parameter.toLowerCase().includes("coliform")?a.recommendations.push("Review hygiene practices and implement stricter sanitation protocols"):e.parameter.toLowerCase().includes("aflatoxin")?a.recommendations.push("Improve storage conditions to prevent fungal growth and mycotoxin production"):(e.parameter.toLowerCase().includes("lead")||e.parameter.toLowerCase().includes("heavy"))&&a.recommendations.push("Investigate raw material sources and processing equipment for contamination"))})),a.recommendations=[...new Set(a.recommendations)],a}(a);return{results:a,overallStatus:t,feedback:i}}const p={async getReports(e={}){const a=new URLSearchParams;Object.entries(e).forEach((([e,t])=>{void 0!==t&&""!==t&&a.append(e,String(t))}));const i=await t.get(`/reports?${a.toString()}`),r=i.data.reports||[];return{data:r,pagination:i.data.pagination||{page:1,limit:10,total:r.length,totalPages:1}}},getReport:async e=>(await t.get(`/reports/${e}`)).data,async createReport(e){const a=new FormData;a.append("productId",e.productId),a.append("laboratoryId",e.laboratoryId),a.append("analysisType",e.analysisType),e.results&&a.append("results",e.results),a.append("report",e.file);return(await t.post("/reports",a,{headers:{"Content-Type":"multipart/form-data"}})).data},async updateReportResults(e,a){const i={results:"string"==typeof a.results?a.results:JSON.stringify(a.results),isVerified:a.isVerified};return(await t.put(`/reports/${e}/results`,i)).data},downloadReport:async e=>(await t.get(`/reports/${e}/download`,{responseType:"blob"})).data,deleteReport:async e=>(await t.delete(`/reports/${e}`)).data,async getReportsByProduct(e){return(await this.getReports({productId:e,limit:100})).data},async getReportsByLaboratory(e){return(await this.getReports({laboratoryId:e,limit:100})).data},async getPendingReports(){return(await this.getReports({status:"pending",limit:100})).data},async getVerifiedReports(){return(await this.getReports({status:"verified",limit:100})).data},validateReportFile(e){const a=[];return e?(e.size>10485760&&a.push("Arquivo deve ter no máximo 10MB"),["application/pdf","image/jpeg","image/png","image/jpg"].includes(e.type)||a.push("Tipo de arquivo não permitido. Use PDF, JPEG ou PNG"),{isValid:0===a.length,errors:a}):(a.push("Arquivo é obrigatório"),{isValid:!1,errors:a})},validateReportData(e){const a=[];if(e.productId||a.push("Produto é obrigatório"),e.laboratoryId||a.push("Laboratório é obrigatório"),(!e.analysisType||e.analysisType.trim().length<2)&&a.push("Tipo de análise deve ter pelo menos 2 caracteres"),e.results)try{"string"==typeof e.results&&JSON.parse(e.results)}catch(t){}return{isValid:0===a.length,errors:a}},getCommonAnalysisTypes:()=>["Análise Nutricional","Análise Microbiológica","Análise de Glúten","Análise de Proteínas","Análise de Lactose","Análise de Alérgenos","Análise de Vitaminas","Análise de Minerais","Análise de Probióticos","Análise de Contaminantes","Análise Físico-Química","Análise de Pesticidas","Análise de Metais Pesados","Análise de Conservantes","Análise de Corantes","Outros"],formatFileSize(e){if(0===e)return"0 Bytes";const a=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,a)).toFixed(2))+" "+["Bytes","KB","MB","GB"][a]},getFileExtension(e){var a;return(null==(a=e.split(".").pop())?void 0:a.toLowerCase())||""},isPDF:e=>"application/pdf"===e.type,isImage:e=>e.type.startsWith("image/"),generateUniqueFileName(e){return`report-${Date.now()}-${Math.round(1e9*Math.random())}.${this.getFileExtension(e)}`},parseAnalysisResults(e){try{return JSON.parse(e)}catch(a){return{text:e}}},formatResultsForDisplay(e){try{const a=JSON.parse(e);return JSON.stringify(a,null,2)}catch(a){return e}}};var h=(e=>(e.PENDING="PENDING",e.IN_PROGRESS="IN_PROGRESS",e.APPROVED="APPROVED",e.REJECTED="REJECTED",e.PARTIAL="PARTIAL",e.EXPIRED="EXPIRED",e.REVALIDATION_REQUIRED="REVALIDATION_REQUIRED",e.SUSPENDED="SUSPENDED",e))(h||{});const y={QUEUED:"QUEUED",ANALYZING:"ANALYZING",VALIDATING:"VALIDATING",REVIEW_REQUIRED:"REVIEW_REQUIRED",COMPLETED:"COMPLETED",FAILED:"FAILED"};const v=new class{constructor(){a(this,"processingQueue",[]),a(this,"isProcessing",!1),a(this,"processingInterval",null),a(this,"CONFIDENCE_THRESHOLD",85),a(this,"PROCESSING_INTERVAL",5e3),a(this,"MAX_RETRY_ATTEMPTS",3),this.startQueueProcessor()}startQueueProcessor(){this.processingInterval||(this.processingInterval=setInterval((async()=>{!this.isProcessing&&this.processingQueue.length>0&&await this.processValidationQueue()}),this.PROCESSING_INTERVAL))}stopQueueProcessor(){this.processingInterval&&(clearInterval(this.processingInterval),this.processingInterval=null)}async queueValidation(e,a,t="NORMAL"){const r={id:`queue-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,reportId:e,productId:a,priority:t,state:y.QUEUED,attempts:0,maxAttempts:this.MAX_RETRY_ATTEMPTS,createdAt:new Date};return"URGENT"===t?this.processingQueue.unshift(r):(this.processingQueue.push(r),this.processingQueue.sort(((e,a)=>{const t={URGENT:0,HIGH:1,NORMAL:2,LOW:3};return t[e.priority]-t[a.priority]}))),await i.create({title:"Validation Queued",message:`Report validation has been queued for processing (Priority: ${t})`,type:"info",userId:"system"}),r.id}async processValidationQueue(){if(!this.isProcessing&&0!==this.processingQueue.length){this.isProcessing=!0;try{const a=this.processingQueue.find((e=>e.state===y.QUEUED&&e.attempts<e.maxAttempts));if(!a)return void(this.isProcessing=!1);a.processingStartedAt=new Date,a.attempts++;try{a.state=y.ANALYZING;const e=await this.analyzeReport(a.reportId);a.state=y.VALIDATING;const t=await this.createAutomatedValidation(e,a.productId,a.reportId);e.confidence<this.CONFIDENCE_THRESHOLD?(a.state=y.REVIEW_REQUIRED,await i.create({title:"Manual Review Required",message:`Validation confidence (${e.confidence}%) is below threshold. Manual review required.`,type:"warning",userId:"system"})):(a.state=y.COMPLETED,a.completedAt=new Date,a.validationId=t.id,await o.generateQRCode(a.productId),await i.create({title:"Validation Completed",message:`Automated validation completed successfully with ${e.confidence}% confidence`,type:"success",userId:"system"})),this.processingQueue=this.processingQueue.filter((e=>e.id!==a.id))}catch(e){a.lastError=e instanceof Error?e.message:"Unknown error",a.state=y.QUEUED,a.attempts>=a.maxAttempts&&(a.state=y.FAILED,await i.create({title:"Validation Failed",message:`Failed to process validation after ${a.maxAttempts} attempts: ${a.lastError}`,type:"error",userId:"system"}),this.processingQueue=this.processingQueue.filter((e=>e.id!==a.id)))}}finally{this.isProcessing=!1}}}async analyzeReport(e){try{const a=await p.getById(e);if(!a)throw new Error("Report not found");const t=await this.parseReportData(a),i=await this.analyzeDataPoints(t),r=this.calculateConfidence(i),s=this.generateRecommendations(i);return{id:`analysis-${Date.now()}`,timestamp:(new Date).toISOString(),algorithm:"TrueLabel-AutoValidator-v1.0",version:"1.0.0",findings:i,recommendations:s,confidence:r,processingTime:Date.now()}}catch(a){throw a}}async parseReportData(e){const a=e.results||{},t={dataPoints:[],claims:[],certifications:a.certifications||[],testMethods:a.testMethods||[],sampleInfo:a.sampleInfo||{}};return a.nutritionalInfo&&Object.entries(a.nutritionalInfo).forEach((([e,a])=>{t.dataPoints.push({name:e,value:a.value||a,unit:a.unit||"",category:"nutritional"})})),a.chemicalAnalysis&&Object.entries(a.chemicalAnalysis).forEach((([e,a])=>{t.dataPoints.push({name:e,value:a.value||a,unit:a.unit||"",category:"chemical"})})),a.microbiological&&Object.entries(a.microbiological).forEach((([e,a])=>{t.dataPoints.push({name:e,value:a.value||a,unit:a.unit||"CFU/g",category:"microbiological"})})),a.claims&&(t.claims=Array.isArray(a.claims)?a.claims:a.claims.split(",").map((e=>e.trim()))),t}async analyzeDataPoints(e){const a=[];for(const r of e.dataPoints){const e=await this.applyValidationRules(r);e.passed?e.warnings&&e.warnings.length>0&&a.push({category:"ACCURACY",severity:"MEDIUM",dataPoint:r.name,description:e.warnings.join(", "),evidence:JSON.stringify(r),suggestedAction:"Monitor this parameter closely"}):a.push({category:"COMPLIANCE",severity:"HIGH",dataPoint:r.name,description:`Value ${r.value} ${r.unit} does not meet requirements`,evidence:JSON.stringify(r),suggestedAction:"Review and update product formulation or retest"})}const t=this.checkDataConsistency(e);a.push(...t);const i=this.detectAnomalies(e);return a.push(...i),a}async applyValidationRules(e){const a={protein:{min:0,max:100,warning:90},fat:{min:0,max:100,warning:90},carbohydrates:{min:0,max:100,warning:90},sodium:{min:0,max:5e3,warning:2300},sugar:{min:0,max:100,warning:50},fiber:{min:0,max:100},calories:{min:0,max:900},coliformCount:{min:0,max:100},salmonella:{max:0},listeria:{max:0}}[e.name.toLowerCase()];if(!a)return{passed:!0,confidence:100};const t=parseFloat(e.value),i=[];let r=!0,s=100;return void 0!==a.min&&t<a.min&&(r=!1,s=0),void 0!==a.max&&t>a.max&&(r=!1,s=0),r&&void 0!==a.warning&&t>a.warning&&(i.push(`Value approaching upper limit (${a.warning} ${e.unit})`),s=80),{passed:r,confidence:s,warnings:i}}checkDataConsistency(e){var a,t,i,r;const s=[],o=(null==(a=e.dataPoints.find((e=>"protein"===e.name.toLowerCase())))?void 0:a.value)||0,n=(null==(t=e.dataPoints.find((e=>"fat"===e.name.toLowerCase())))?void 0:t.value)||0,l=(null==(i=e.dataPoints.find((e=>"carbohydrates"===e.name.toLowerCase())))?void 0:i.value)||0,c=parseFloat(o)+parseFloat(n)+parseFloat(l);c>100&&s.push({category:"CONSISTENCY",severity:"HIGH",dataPoint:"macronutrients",description:`Sum of macronutrients (${c.toFixed(1)}%) exceeds 100%`,evidence:`Protein: ${o}%, Fat: ${n}%, Carbs: ${l}%`,suggestedAction:"Verify analytical methods and recalculate values"});const u=(null==(r=e.dataPoints.find((e=>"calories"===e.name.toLowerCase())))?void 0:r.value)||0,d=4*parseFloat(o)+9*parseFloat(n)+4*parseFloat(l),m=Math.abs(parseFloat(u)-d)/d*100;return m>10&&s.push({category:"CONSISTENCY",severity:"MEDIUM",dataPoint:"calories",description:`Caloric value deviates ${m.toFixed(1)}% from expected`,evidence:`Reported: ${u} kcal, Expected: ${d.toFixed(0)} kcal`,suggestedAction:"Verify caloric calculation method"}),s}detectAnomalies(e){const a=[];return e.dataPoints.forEach((e=>{e.value&&e.value.toString().includes(".")&&e.value.toString().split(".")[1].length>4&&a.push({category:"ANOMALY",severity:"LOW",dataPoint:e.name,description:"Unusually precise value detected",evidence:`Value: ${e.value}`,suggestedAction:"Verify measurement precision and rounding rules"}),0!==e.value&&999!==e.value&&9999!==e.value||a.push({category:"ANOMALY",severity:"MEDIUM",dataPoint:e.name,description:"Potential placeholder value detected",evidence:`Value: ${e.value}`,suggestedAction:"Confirm this is the actual measured value"})})),a}calculateConfidence(e){if(0===e.length)return 100;const a={HIGH:20,MEDIUM:10,LOW:5,INFO:2},t=e.reduce(((e,t)=>e+a[t.severity]),0);return Math.max(0,100-t)}generateRecommendations(e){const a=[],t=e.filter((e=>"HIGH"===e.severity)).length,i=e.filter((e=>"MEDIUM"===e.severity)).length;t>0&&a.push(`Address ${t} critical compliance issues before approval`),i>0&&a.push(`Review ${i} moderate issues for potential improvement`);const r=[...new Set(e.map((e=>e.category)))];return r.includes("CONSISTENCY")&&a.push("Implement data validation checks to ensure consistency across measurements"),r.includes("ANOMALY")&&a.push("Review data collection and entry procedures to prevent anomalies"),r.includes("COMPLIANCE")&&a.push("Consider reformulation or additional testing to meet compliance requirements"),0===a.length&&a.push("Product meets all validation criteria. Continue with regular monitoring."),a}async createAutomatedValidation(e,a,i){const r=e.findings.map((e=>({dataPointId:`dp-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,name:e.dataPoint,value:e.evidence,validationStatus:"HIGH"===e.severity?"FAILED":"MEDIUM"===e.severity?"WARNING":"PASSED",notes:e.description,source:"AUTOMATED_ANALYSIS"}))),s={productId:a,reportId:i,type:"AUTOMATED",status:this.determineValidationStatus(r,e.confidence),claimsValidated:{automated:!0,confidence:e.confidence,algorithm:e.algorithm,version:e.version,findingsCount:e.findings.length},dataPoints:r,summary:this.generateValidationSummary(e),notes:e.recommendations.join("\n"),lifecycle:{validFrom:(new Date).toISOString(),validUntil:new Date(Date.now()+31536e6).toISOString(),formulaVersion:"1.0",renewalRequired:!0,expiryWarningDays:30,autoRenew:!1}},o=await A.create(s);return await t.patch(`/validations/${o.id}`,{automatedAnalysis:e,confidence:e.confidence}),o}determineValidationStatus(e,a){const t=e.filter((e=>"FAILED"===e.validationStatus)).length,i=e.filter((e=>"WARNING"===e.validationStatus)).length,r=e.length;return t>0?h.REJECTED:a<this.CONFIDENCE_THRESHOLD?h.PENDING:i>.3*r?h.PARTIAL:h.APPROVED}generateValidationSummary(e){const a=e.findings.reduce(((e,a)=>(e[a.category]=(e[a.category]||0)+1,e)),{}),t=[`Automated validation completed with ${e.confidence}% confidence.`,`Processed in ${e.processingTime}ms using ${e.algorithm} v${e.version}.`,"","Findings Summary:"];return Object.entries(a).forEach((([e,a])=>{t.push(`- ${e}: ${a} issue(s)`)})),e.recommendations.length>0&&(t.push("","Key Recommendations:"),e.recommendations.slice(0,3).forEach(((e,a)=>{t.push(`${a+1}. ${e}`)}))),t.join("\n")}async generateFeedback(e){const a=[];return e.status===h.REJECTED&&a.push({id:`feedback-${Date.now()}-1`,userId:"system",userName:"Automated Validation System",type:"CORRECTION",message:"Your product validation was rejected. Please address the identified issues and resubmit.",status:"PENDING",createdAt:(new Date).toISOString()}),e.status===h.PARTIAL&&a.push({id:`feedback-${Date.now()}-2`,userId:"system",userName:"Automated Validation System",type:"SUGGESTION",message:"Your product received partial validation. Consider addressing the warnings to achieve full validation.",status:"PENDING",createdAt:(new Date).toISOString()}),e.dataPoints&&e.dataPoints.filter((e=>"FAILED"===e.validationStatus)).forEach(((e,t)=>{a.push({id:`feedback-${Date.now()}-${t+3}`,userId:"system",userName:"Automated Validation System",type:"CORRECTION",message:`Data point "${e.name}" failed validation: ${e.notes||"Does not meet requirements"}`,dataPointId:e.dataPointId,status:"PENDING",createdAt:(new Date).toISOString()})})),a}getQueueStatus(){const e=this.processingQueue.reduce(((e,a)=>(e[a.state]=(e[a.state]||0)+1,e)),{}),a=this.processingQueue.reduce(((e,a)=>(e[a.priority]=(e[a.priority]||0)+1,e)),{});return{totalItems:this.processingQueue.length,byState:e,byPriority:a}}getQueueItem(e){return this.processingQueue.find((a=>a.id===e))}cancelQueuedValidation(e){const a=this.processingQueue.findIndex((a=>a.id===e));return-1!==a&&this.processingQueue[a].state===y.QUEUED&&(this.processingQueue.splice(a,1),!0)}retryFailedValidation(e){const a=this.processingQueue.find((a=>a.id===e));return!(!a||a.state!==y.FAILED)&&(a.state=y.QUEUED,a.attempts=0,a.lastError=void 0,!0)}},A={async getValidations(e={}){try{const a=new URLSearchParams;Object.entries(e).forEach((([e,t])=>{void 0!==t&&""!==t&&a.append(e,String(t))}));const i=await t.get(`/validations?${a.toString()}`),r=i.data.data||i.data.validations||[];return{data:r,pagination:i.data.pagination||{page:1,limit:10,total:r.length,totalPages:1}}}catch(a){if(r.shouldUseFallback(a)){r.logFallbackUsage("validationService","getValidations",a),await r.simulateDelay();let t=[...s.validations];e.status&&(t=t.filter((a=>a.status===e.status))),e.productId&&(t=t.filter((a=>a.productId===e.productId)));const i=e.page||1,o=e.limit||10,n=(i-1)*o,l=n+o;return{data:t.slice(n,l),pagination:{page:i,limit:o,total:t.length,totalPages:Math.ceil(t.length/o)}}}throw a}},getValidation:async e=>(await t.get(`/validations/${e}`)).data,async create(e){const a=await t.post("/validations",e);return a.data.validation||a.data},createValidation:async e=>(await t.post("/validations",e)).data,queueAutomatedValidation:async(e,a,t)=>({queueId:await v.queueValidation(e,a,t),message:`Validation queued for automated processing with priority: ${t||"NORMAL"}`}),getAutomatedQueueStatus:async()=>v.getQueueStatus(),async getAutomatedQueueItem(e){const a=v.getQueueItem(e);if(!a)throw new Error("Queue item not found");return a},async cancelAutomatedValidation(e){const a=v.cancelQueuedValidation(e);return{success:a,message:a?"Validation cancelled successfully":"Failed to cancel validation"}},async retryAutomatedValidation(e){const a=v.retryFailedValidation(e);return{success:a,message:a?"Validation retry scheduled":"Failed to retry validation"}},updateValidation:async(e,a)=>(await t.put(`/validations/${e}`,a)).data,getValidationStats:async()=>(await t.get("/validations/stats/overview")).data,async getValidationsByProduct(e){return(await this.getValidations({productId:e,limit:100})).data},async getPendingValidations(){return(await this.getValidations({status:"PENDING",limit:100})).data},async getApprovedValidations(){return(await this.getValidations({status:"APPROVED",limit:100})).data},validateValidationData(e){const a=[];return e.productId||a.push("Produto é obrigatório"),"LABORATORY"!==e.type||e.reportId||a.push("Relatório é obrigatório para validação laboratorial"),e.status||a.push("Status é obrigatório"),{isValid:0===a.length,errors:a}},getAvailableStatuses:()=>[{value:"PENDING",label:"Pendente",color:"yellow"},{value:"APPROVED",label:"Aprovado",color:"green"},{value:"REJECTED",label:"Rejeitado",color:"red"},{value:"PARTIAL",label:"Parcial",color:"orange"}],formatStatus(e){return this.getAvailableStatuses().find((a=>a.value===e))||{label:e,color:"gray"}},calculateApprovalRate:e=>0===e.total?0:e.approved/e.total*100,processClaimsValidated:(e,a)=>e.split(",").map((e=>e.trim())).map((e=>{var t,i;return{claim:e,validated:(null==(t=a[e])?void 0:t.validated)||!1,notes:(null==(i=a[e])?void 0:i.notes)||""}})),generateValidationSummary(e){const a=Object.values(e).filter((e=>e.validated)).length,t=Object.keys(e).length;return a===t?`Todos os ${t} claims foram validados com sucesso.`:0===a?`Nenhum dos ${t} claims foi validado.`:`${a} de ${t} claims foram validados.`},canEditValidation:(e,a)=>"ADMIN"===a,canCreateValidation:e=>"ADMIN"===e,getRecommendedActions(e){const a=[];return"PENDING"===e.status?(a.push("Revisar relatório de laboratório"),a.push("Validar claims do produto"),a.push("Definir status da validação")):"PARTIAL"===e.status?(a.push("Revisar claims não validados"),a.push("Solicitar informações adicionais"),a.push("Atualizar status se necessário")):"APPROVED"===e.status?(a.push("Gerar QR Code para o produto"),a.push("Notificar marca sobre aprovação")):"REJECTED"===e.status&&(a.push("Notificar marca sobre rejeição"),a.push("Fornecer feedback para melhorias")),a},formatValidationDate:e=>e?new Date(e).toLocaleDateString("pt-BR",{day:"2-digit",month:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit"}):"Não validado",async validateQRCode(e){var a,i;try{const a=await t.get(`/qr/validate/${e}`);return{isValid:!0,productId:a.data.productId,scans:a.data.scans||0,validatedAt:a.data.validatedAt,message:a.data.message}}catch(r){return{isValid:!1,message:(null==(i=null==(a=r.response)?void 0:a.data)?void 0:i.message)||"Código QR inválido"}}},async validateProductWithRules(e){const{results:a,overallStatus:t,feedback:i}=g(e);let r;switch(t.status){case"approved":r="APPROVED";break;case"conditional":r="PARTIAL";break;case"rejected":r="REJECTED"}return{validationResults:a,overallStatus:t,feedback:i,recommendedStatus:r}},generateValidationReport(e){const a=e.filter((e=>"approved"===e.status)).length,t=e.filter((e=>"warning"===e.status)).length,i=e.filter((e=>"rejected"===e.status)).length;let r="";return r=i>0?`Produto reprovado: ${i} parâmetro(s) fora dos limites regulatórios`:t>0?`Produto aprovado condicionalmente: ${t} parâmetro(s) requerem atenção`:`Produto aprovado: todos os ${a} parâmetros estão dentro dos limites`,{summary:r,details:{approved:a,warnings:t,rejected:i,criticalIssues:e.filter((e=>"rejected"===e.status)).map((e=>`${e.parameter}: ${e.message}`))}}},async checkRegulatoryCompliance(e){const a=[],t=[],i={microbiological:e.microbiological||[],heavyMetals:e.heavyMetals||[],pesticides:e.pesticides||[],mycotoxins:e.mycotoxins||[],nutritional:e.nutritional||[]},{overallStatus:r,feedback:s}=g(i);return r.criticalIssues>0&&a.push(`${r.criticalIssues} parâmetros críticos fora dos limites`),r.warnings>0&&a.push(`${r.warnings} parâmetros em nível de alerta`),[...s.microbiological,...s.chemical,...s.nutritional].forEach((e=>{(e.includes("Exceeds")||e.includes("Above"))&&a.push(e)})),t.push(...s.recommendations),{isCompliant:"approved"===r.status,issues:a,recommendations:t}},async getValidationQueue(){try{return{data:(await t.get("/validations/queue")).data.queue||[]}}catch(e){return{data:[]}}},async getValidationMetrics(){try{return{data:(await t.get("/validations/metrics")).data}}catch(e){return{data:{totalValidations:0,automatedPercentage:0,averageProcessingTime:0,accuracyRate:0,revalidationRate:0,byStatus:{},byType:{},trendsLast30Days:[]}}}},async getValidationFeedback(e){try{return{data:(await t.get(`/validations/${e}/feedback`)).data.feedback||[]}}catch(a){return{data:[]}}},submitValidationFeedback:async(e,a)=>({data:(await t.post(`/validations/${e}/feedback`,a)).data.feedback}),updateValidationDataPoints:async(e,a)=>({data:(await t.put(`/validations/${e}/data-points`,{dataPoints:a})).data.validation}),async processQueueItem(e){var a,i;try{return{success:!0,message:(await t.post(`/validations/queue/${e}/process`)).data.message||"Processing started"}}catch(r){return{success:!1,message:(null==(i=null==(a=r.response)?void 0:a.data)?void 0:i.message)||"Failed to process queue item"}}},async cancelQueueItem(e){var a,i;try{return{success:!0,message:(await t.put(`/validations/queue/${e}/cancel`)).data.message||"Queue item cancelled"}}catch(r){return{success:!1,message:(null==(i=null==(a=r.response)?void 0:a.data)?void 0:i.message)||"Failed to cancel queue item"}}},async retryQueueItem(e){var a,i;try{return{success:!0,message:(await t.post(`/validations/queue/${e}/retry`)).data.message||"Retry scheduled"}}catch(r){return{success:!1,message:(null==(i=null==(a=r.response)?void 0:a.data)?void 0:i.message)||"Failed to retry queue item"}}},async getExpiringValidations(e=30){try{return(await t.get(`/validations/expiring?days=${e}`)).data.validations||[]}catch(a){return[]}},async getRevalidationRequests(){try{return(await t.get("/validations/revalidation-requests")).data.requests||[]}catch(e){return[]}},async getFormulaChangeAlerts(){try{return(await t.get("/validations/formula-change-alerts")).data.alerts||[]}catch(e){return[]}},async getLifecycleMetrics(){try{return(await t.get("/validations/lifecycle-metrics")).data}catch(e){return{activeValidations:0,expiringValidations:0,suspendedQRCodes:0,pendingRevalidations:0,averageValidityPeriod:0,revalidationSuccessRate:0,averageRevalidationTime:0,formulaChangeCount:0}}},requestRevalidation:async e=>(await t.post("/validations/request-revalidation",e,{headers:{"Content-Type":"multipart/form-data"}})).data,batchRequestRevalidation:async e=>(await t.post("/validations/batch-request-revalidation",{validationIds:e})).data,updateValidationLifecycle:async(e,a)=>(await t.put(`/validations/${e}/lifecycle`,a)).data,suspendValidation:async(e,a)=>(await t.put(`/validations/${e}/suspend`,{reason:a})).data,reactivateValidation:async e=>(await t.put(`/validations/${e}/reactivate`)).data};export{h as V,y as W,g as a,p as r,A as v};

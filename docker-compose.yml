version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: truelabel-db
    environment:
      POSTGRES_USER: truelabel
      POSTGRES_PASSWORD: ${DB_PASSWORD:-truelabel123}
      POSTGRES_DB: truelabel_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U truelabel"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: truelabel-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: truelabel-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://truelabel:${DB_PASSWORD:-truelabel123}@postgres:5432/truelabel_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-development-secret-key}
      PORT: 5000
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
      - ./server/uploads:/app/uploads
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: truelabel-frontend
    environment:
      VITE_API_BASE_URL: http://localhost:5000/api/v1
      VITE_QR_BASE_URL: http://localhost:5001
    ports:
      - "5001:5001"
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0 --port 5001

  # Nginx Reverse Proxy (optional for local development)
  nginx:
    image: nginx:alpine
    container_name: truelabel-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/truelabel.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend

  # BullMQ Dashboard (optional)
  bullboard:
    image: deadly0/bull-board
    container_name: truelabel-bullboard
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "3030:3000"
    depends_on:
      - redis

volumes:
  postgres_data:
  redis_data:
declare function badGetProductsWithValidations(): Promise<{
    status: string;
    id: string;
    name: string;
    createdAt: Date;
    updatedAt: Date;
    userId: string;
    brand: string;
    category: string;
    description: string | null;
    sku: string;
    batchNumber: string | null;
    nutritionalInfo: string | null;
    claims: string | null;
    imageUrl: string | null;
    qrCode: string | null;
}[]>;
declare function goodGetProductsWithValidations(): Promise<{
    status: string;
    id: string;
    name: string;
    createdAt: Date;
    updatedAt: Date;
    userId: string;
    brand: string;
    category: string;
    description: string | null;
    sku: string;
    batchNumber: string | null;
    nutritionalInfo: string | null;
    claims: string | null;
    imageUrl: string | null;
    qrCode: string | null;
}[]>;
declare function badGetDashboardData(brandId: string): Promise<{
    products: number;
    validations: number;
    pendingValidations: number;
    qrScans: any;
}>;
declare function goodGetDashboardData(brandId: string): Promise<{
    products: any;
    productsByStatus: any;
    validations: any;
    validationsByStatus: any;
    totalQRScans: any;
    totalQRCodes: any;
}>;
declare function badGetProductDetails(productId: string): Promise<{
    status: string;
    id: string;
    name: string;
    createdAt: Date;
    updatedAt: Date;
    userId: string;
    brand: string;
    category: string;
    description: string | null;
    sku: string;
    batchNumber: string | null;
    nutritionalInfo: string | null;
    claims: string | null;
    imageUrl: string | null;
    qrCode: string | null;
} | null>;
declare function goodGetProductDetails(productId: string): Promise<{
    status: string;
    id: string;
    name: string;
    createdAt: Date;
    updatedAt: Date;
    userId: string;
    brand: string;
    category: string;
    description: string | null;
    sku: string;
    batchNumber: string | null;
    nutritionalInfo: string | null;
    claims: string | null;
    imageUrl: string | null;
    qrCode: string | null;
} | null>;
declare function badSearchProducts(searchTerm: string): Promise<{
    status: string;
    id: string;
    name: string;
    createdAt: Date;
    updatedAt: Date;
    userId: string;
    brand: string;
    category: string;
    description: string | null;
    sku: string;
    batchNumber: string | null;
    nutritionalInfo: string | null;
    claims: string | null;
    imageUrl: string | null;
    qrCode: string | null;
}[]>;
declare function goodSearchProducts(searchTerm: string): Promise<{
    status: string;
    id: string;
    name: string;
    createdAt: Date;
    updatedAt: Date;
    userId: string;
    brand: string;
    category: string;
    description: string | null;
    sku: string;
    batchNumber: string | null;
    nutritionalInfo: string | null;
    claims: string | null;
    imageUrl: string | null;
    qrCode: string | null;
}[]>;
declare function badCreateValidationWithNotification(data: any): Promise<{
    validation: {
        type: string;
        status: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        userId: string;
        claimsValidated: string | null;
        summary: string | null;
        notes: string | null;
        validatedAt: Date | null;
        productId: string;
        reportId: string | null;
    };
    notification: any;
}>;
declare function goodCreateValidationWithNotification(data: any): Promise<{
    validation: {
        type: string;
        status: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        userId: string;
        claimsValidated: string | null;
        summary: string | null;
        notes: string | null;
        validatedAt: Date | null;
        productId: string;
        reportId: string | null;
    };
    notification: any;
}>;
declare function badGetPaginatedProducts(page: number, limit: number): Promise<{
    data: ({
        validations: {
            type: string;
            status: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            userId: string;
            claimsValidated: string | null;
            summary: string | null;
            notes: string | null;
            validatedAt: Date | null;
            productId: string;
            reportId: string | null;
        }[];
    } & {
        status: string;
        id: string;
        name: string;
        createdAt: Date;
        updatedAt: Date;
        userId: string;
        brand: string;
        category: string;
        description: string | null;
        sku: string;
        batchNumber: string | null;
        nutritionalInfo: string | null;
        claims: string | null;
        imageUrl: string | null;
        qrCode: string | null;
    })[];
    total: number;
    page: number;
    totalPages: number;
}>;
declare function goodGetPaginatedProducts(page: number, limit: number): Promise<{
    data: {
        status: string;
        id: string;
        name: string;
        createdAt: Date;
        updatedAt: Date;
        userId: string;
        brand: string;
        category: string;
        description: string | null;
        sku: string;
        batchNumber: string | null;
        nutritionalInfo: string | null;
        claims: string | null;
        imageUrl: string | null;
        qrCode: string | null;
    }[];
    total: number;
    page: number;
    totalPages: number;
    hasMore: boolean;
}>;
declare function badGetUserPermissions(userId: string): Promise<any>;
declare function goodGetUserPermissions(userId: string): Promise<any>;
declare function badExportAllProducts(brandId: string): Promise<{
    status: string;
    id: string;
    name: string;
    createdAt: Date;
    updatedAt: Date;
    userId: string;
    brand: string;
    category: string;
    description: string | null;
    sku: string;
    batchNumber: string | null;
    nutritionalInfo: string | null;
    claims: string | null;
    imageUrl: string | null;
    qrCode: string | null;
}[]>;
declare function goodExportAllProducts(brandId: string): AsyncGenerator<{
    status: string;
    id: string;
    name: string;
    createdAt: Date;
    updatedAt: Date;
    userId: string;
    brand: string;
    category: string;
    description: string | null;
    sku: string;
    batchNumber: string | null;
    nutritionalInfo: string | null;
    claims: string | null;
    imageUrl: string | null;
    qrCode: string | null;
}[], void, unknown>;
declare function badCalculateMonthlyStats(brandId: string, year: number, month: number): Promise<{
    totalProducts: number;
    validatedProducts: number;
    totalValidations: number;
    totalScans: number;
}>;
declare function goodCalculateMonthlyStats(brandId: string, year: number, month: number): Promise<{
    totalProducts: any;
    totalValidations: any;
    totalScans: number;
}>;
export declare const QueryExamples: {
    bad: {
        badGetProductsWithValidations: typeof badGetProductsWithValidations;
        badGetDashboardData: typeof badGetDashboardData;
        badGetProductDetails: typeof badGetProductDetails;
        badSearchProducts: typeof badSearchProducts;
        badCreateValidationWithNotification: typeof badCreateValidationWithNotification;
        badGetPaginatedProducts: typeof badGetPaginatedProducts;
        badGetUserPermissions: typeof badGetUserPermissions;
        badExportAllProducts: typeof badExportAllProducts;
        badCalculateMonthlyStats: typeof badCalculateMonthlyStats;
    };
    good: {
        goodGetProductsWithValidations: typeof goodGetProductsWithValidations;
        goodGetDashboardData: typeof goodGetDashboardData;
        goodGetProductDetails: typeof goodGetProductDetails;
        goodSearchProducts: typeof goodSearchProducts;
        goodCreateValidationWithNotification: typeof goodCreateValidationWithNotification;
        goodGetPaginatedProducts: typeof goodGetPaginatedProducts;
        goodGetUserPermissions: typeof goodGetUserPermissions;
        goodExportAllProducts: typeof goodExportAllProducts;
        goodCalculateMonthlyStats: typeof goodCalculateMonthlyStats;
    };
};
export {};
//# sourceMappingURL=query-examples.d.ts.map
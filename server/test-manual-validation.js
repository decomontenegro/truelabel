const axios = require('axios');

async function testManualValidation() {
  console.log('üß™ TESTANDO VALIDA√á√ÉO MANUAL (SEM RELAT√ìRIO)\n');

  try {
    // Login
    const loginResponse = await axios.post('http://localhost:3001/api/auth/login', {
      email: 'admin@truelabel.com',
      password: '123456'
    });
    const authToken = loginResponse.data.token;
    console.log('‚úÖ Login realizado');

    // Listar produtos PENDING
    console.log('\n1Ô∏è‚É£ LISTANDO PRODUTOS PENDING...');
    const productsResponse = await axios.get('http://localhost:3001/api/products?status=PENDING', {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    
    if (productsResponse.data.products.length === 0) {
      console.log('‚ùå Nenhum produto PENDING encontrado');
      return;
    }

    const productId = productsResponse.data.products[0].id;
    console.log(`‚úÖ Produto PENDING encontrado: ${productsResponse.data.products[0].name}`);
    console.log(`   ID: ${productId}`);

    // Criar valida√ß√£o manual
    console.log('\n2Ô∏è‚É£ CRIANDO VALIDA√á√ÉO MANUAL...');
    const validationResponse = await axios.post('http://localhost:3001/api/validations', {
      productId: productId,
      type: 'MANUAL',
      status: 'APPROVED',
      claimsValidated: {
        'Teste': { status: 'approved', evidence: 'Valida√ß√£o manual de teste' }
      },
      summary: 'Produto aprovado em valida√ß√£o manual - teste sem relat√≥rio',
      notes: 'Teste do novo sistema sem depend√™ncia circular'
    }, {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    
    console.log(`‚úÖ Valida√ß√£o manual criada com sucesso!`);
    console.log(`   Status: ${validationResponse.data.validation.status}`);
    console.log(`   Tipo: ${validationResponse.data.validation.type}`);
    console.log(`   Relat√≥rio: ${validationResponse.data.validation.reportId || 'NENHUM (valida√ß√£o manual)'}`);

    console.log('\nüéâ VALIDA√á√ÉO MANUAL FUNCIONANDO!');
    console.log('‚úÖ Sistema permite valida√ß√£o sem relat√≥rio');
    console.log('‚úÖ Depend√™ncia circular quebrada com sucesso!');

  } catch (error) {
    console.error('‚ùå ERRO:', error.response?.data || error.message);
  }
}

testManualValidation();

const { PrismaClient } = require('@prisma/client');

console.log('üîç Testando conex√£o com o banco de dados Supabase...\n');

// Configurar a URL diretamente para o teste
process.env.DATABASE_URL = "postgresql://postgres:truelabel123456@db.japmwgubsutskpotfayx.supabase.co:5432/postgres?sslmode=require";

const prisma = new PrismaClient({
  log: ['error', 'warn'],
});

async function testConnection() {
  try {
    // Teste 1: Conex√£o b√°sica
    console.log('1Ô∏è‚É£ Testando conex√£o...');
    await prisma.$connect();
    console.log('‚úÖ Conex√£o estabelecida com sucesso!\n');

    // Teste 2: Contar usu√°rios
    console.log('2Ô∏è‚É£ Verificando usu√°rios...');
    const userCount = await prisma.user.count();
    console.log(`‚úÖ Encontrados ${userCount} usu√°rios no banco\n`);

    // Teste 3: Listar usu√°rios
    console.log('3Ô∏è‚É£ Listando usu√°rios:');
    const users = await prisma.user.findMany({
      select: {
        email: true,
        name: true,
        role: true
      }
    });
    
    users.forEach(user => {
      console.log(`   - ${user.role}: ${user.email} (${user.name})`);
    });

    // Teste 4: Verificar laborat√≥rios
    console.log('\n4Ô∏è‚É£ Verificando laborat√≥rios...');
    const labCount = await prisma.laboratory.count();
    console.log(`‚úÖ Encontrados ${labCount} laborat√≥rios no banco\n`);

    // Teste 5: Verificar produtos
    console.log('5Ô∏è‚É£ Verificando produtos...');
    const productCount = await prisma.product.count();
    console.log(`‚úÖ Encontrados ${productCount} produtos no banco\n`);

    console.log('üéâ SUCESSO! Banco de dados est√° funcionando corretamente!');
    console.log('\nüìã Resumo:');
    console.log(`   - Usu√°rios: ${userCount}`);
    console.log(`   - Laborat√≥rios: ${labCount}`);
    console.log(`   - Produtos: ${productCount}`);
    
    console.log('\nüîê Logins dispon√≠veis:');
    console.log('   - admin@truelabel.com / admin123');
    console.log('   - brand@truelabel.com.br / brand123');
    console.log('   - analista@labexemplo.com / lab123');

  } catch (error) {
    console.error('‚ùå ERRO ao conectar com o banco:', error.message);
    
    if (error.message.includes("Can't reach database")) {
      console.log('\nüí° Poss√≠veis solu√ß√µes:');
      console.log('   1. Verifique se o projeto Supabase est√° ativo');
      console.log('   2. Confirme se a senha est√° correta');
      console.log('   3. Tente usar a connection string com pooling (porta 6543)');
      console.log('   4. Execute o SQL diretamente no Supabase SQL Editor');
    } else if (error.message.includes('relation "User" does not exist')) {
      console.log('\nüí° As tabelas n√£o foram criadas ainda!');
      console.log('   1. V√° no Supabase SQL Editor');
      console.log('   2. Cole e execute o SQL do arquivo supabase-direct-setup.sql');
    }
  } finally {
    await prisma.$disconnect();
  }
}

testConnection();